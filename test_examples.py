class TestExpression:
    def __init__(self, expr, evaluation, tokenized):
        self.expr = expr
        self.evaluation = evaluation
        self.tokenized = tokenized


examples = [
    TestExpression(
        '(+ 3 4)', 7,
        ['(', '+', '3', '4', ')']),
    TestExpression(
        '(- 2 1)', 1,
        ['(', '-', '2', '1', ')']),
    TestExpression(
        '(+ 21 1)', 22,
        ['(', '+', '21', '1', ')']),
    TestExpression(
        '(* 2 8)', 16,
        ['(', '*', '2', '8', ')']),
    TestExpression(
        '(- 0 8)', -8,
        ['(', '-', '0', '8', ')']),
    TestExpression(
        '(+ (+ 2 8) 5)', 15,
        ['(', '+', '(', '+', '2', '8', ')', '5', ')']),
    TestExpression(
        '(+ (- 8 2) 5)', 11,
        ['(', '+', '(', '-', '8', '2', ')', '5', ')']),
    TestExpression(
        '(+ (- 8 2) 5 (* 2 2))', 15,
        ['(', '+', '(', '-', '8', '2', ')', '5', '(', '*', '2', '2', ')', ')']),
    TestExpression(
        '(+ (- 8 (+ 1 1)) 5 (* 2 2))', 15,
        ['(', '+', '(', '-', '8', '(', '+', '1', '1', ')', ')', '5', '(', '*', '2', '2', ')',
         ')']),
    TestExpression(
        '(+ 3 3 3 (+ 3 (- 3 4 4) 3 (- 3 2)) (* 3 2) (- 1 7))', 11,
        ['(', '+', '3', '3', '3', '(', '+', '3', '(', '-', '3', '4', '4', ')', '3', '(', '-', '3',
         '2', ')', ')', '(', '*', '3', '2', ')', '(', '-', '1', '7', ')', ')']),
    TestExpression(
        '(if true (+ 4 2) (+ 3 2))', 6,
        ['(', 'if', 'true', '(', '+', '4', '2', ')', '(', '+', '3', '2', ')', ')']),
    TestExpression(
        '(if (> 4 3) (+ 4 2) (+ 3 2))', 6,
        ['(', 'if', '(', '>', '4', '3', ')', '(', '+', '4', '2', ')', '(', '+', '3', '2', ')',
         ')']),
    TestExpression(
        '(+ 3 (if (> 4 3) (+ 4 2) (+ 3 2)))', 9,
        ['(', '+', '3', '(', 'if', '(', '>', '4', '3', ')', '(', '+', '4', '2', ')', '(', '+', '3',
         '2', ')', ')', ')']),
    TestExpression(
        '(> 5 4)', 'true',
        ['(', '>', '5', '4', ')']),
    TestExpression(
        '(> 5 (+ 3 4))', 'false',
        ['(', '>', '5', '(', '+', '3', '4', ')', ')']),
    TestExpression(
        '(< 5 4)', 'false',
        ['(', '<', '5', '4', ')']),
    TestExpression(
        '(< 5 (+ 3 4))', 'true',
        ['(', '<', '5', '(', '+', '3', '4', ')', ')']),
    TestExpression(
        '(= 5 5)', 'true',
        ['(', '=', '5', '5', ')']),
    TestExpression(
        '(= 5 (+ 3 4))', 'false',
        ['(', '=', '5', '(', '+', '3', '4', ')', ')']),
    TestExpression(
        '(not true)', 'false',
        ['(', 'not', 'true', ')']),
    TestExpression(
        '(not false)', 'true',
        ['(', 'not', 'false', ')']),
    TestExpression(
        '(not (> 4 5))', 'true',
        ['(', 'not', '(', '>', '4', '5', ')', ')']),
    TestExpression(
        '(if (not (> 4 5)) 5 6)', '5',
        ['(', 'if', '(', 'not', '(', '>', '4', '5', ')', ')', '5', '6', ')']),
]
